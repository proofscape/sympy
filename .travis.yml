language: python
os:
  - linux

jobs:
  fast_finish: true
  include:

    - python: 3.8
      dist: xenial
      env:
        - TEST_SPHINX="true"
        - secure: "YIEZal9EBTL+fg2YmoZoS8Bvt3eAVUOZjb38CtqpzR2CCSXWoUk35KG23m2NknlY1iKfYJyt7XWBszT/VKOQEbWQq7PIakV4vIByrWacgBxy1x3WC+rZoW7TX+JJiL+y942qIYbMoNMMB8xFpE5RDLSjSecMpFhJJXoafVTvju8="
      addons:
        apt:
          packages:
            - graphviz
            - chromium-browser
            - texlive
            - texlive-xetex
            - texlive-fonts-recommended
            - texlive-latex-extra
            - latexmk
            - lmodern
            - librsvg2-bin
            - imagemagick
            - docbook2x
            - dbus

before_install:
  - set -e
  - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
  - if [[ "${TEST_COVERAGE}" == "true" ]]; then
    pip install coverage;
    coverage debug sys;
    fi
  - if [[ "${TEST_FLAKE8}" == "true" ]]; then
    pip install flake8;
    fi
  - if [ "$TRAVIS_PYTHON_VERSION" == "3.8" ]; then
    pip uninstall -y Cython;
    fi
  - |
    if [[ -n "${TEST_OPT_DEPENDENCY}" ]]; then
    # We do this conditionally because it saves us some downloading if the
    # version is the same.
        deactivate; # Deactivate the Travis virtualenv
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -q -O miniconda.sh;
        bash miniconda.sh -b -p $HOME/miniconda;
        export PATH="$HOME/miniconda/bin:$PATH";
        hash -r;
        conda config --set always_yes yes --set changeps1 no;
        conda update -q conda;
        conda config --prepend channels conda-forge --prepend channels symengine/label/dev;

        conda info -a;
        # This became very slow: https://github.com/sympy/sympy/issues/20289
        # We give it a 30 minute wait for now but hopefully this command will
        # stop being so slow.
        conda install mamba
        travis_wait 30 mamba create -q -n test-environment ${TEST_OPT_DEPENDENCY};
        source activate test-environment;
        export CPATH=$CONDA_PREFIX/include;
        export LIBRARY_PATH=$CONDA_PREFIX/lib;
        export LD_LIBRARY_PATH=$CONDA_PREFIX/lib;
        conda clean --all;
        if [[ "$TEST_SAGE" == "true" ]]; then
            # Use a separate environment because sage downgrades matplotlib
            conda create -c conda-forge/label/cf201901 -n sage sagelib mpmath "ipython>=5.5.0,<6";
            conda clean --all;
        fi
    elif [ "$TRAVIS_PYTHON_VERSION" != "pypy" ]; then
        if pip list | grep "numpy"; then
            pip uninstall -y numpy;
        fi
    fi
  - if [[ "${TEST_SPHINX}" == "true" ]]; then
    pip install sphinx "docutils" doctr matplotlib sphinx-math-dollar sphinx-reredirects myst-parser linkify-it-py furo sphinx-copybutton;
    fi
  - if [[ "${BENCHMARK}" == "true" ]]; then
    pip install asv;
    git submodule add https://github.com/sympy/sympy_benchmarks.git;
    fi

install:
  # If a command fails, fail the build.
  - set -e
  - if [ "$TRAVIS_PYTHON_VERSION" = "pypy" ];
    then virtualenv -p /usr/bin/pypy3 ~/.venv;
    . ~/.venv/bin/activate;
    fi

  # -We:invalid makes invalid escape sequences error in Python 3.6. See
  # -#12028.
  # SyntaxWarning flag for catching errors in Python3.8
  # Issue -  #16973. -We:invalid can be dropped from 3.8 onwards, but
  # it needs to be there for earlier versions.
  #
  # This would fail due to invalid Python 2.7 syntax so we disable it while
  # testing import under Python 2.
  - |
    if [[ -z "${TEST_PY2_IMPORT}" ]]; then
        if [[ "${TEST_SETUP}" == "true" ]]; then
          # The install cycle below is to test installation on systems without
          # setuptools.
          pip install virtualenv
          virtualenv ~/.venv-no-setuptools;
          ~/.venv-no-setuptools/bin/pip install mpmath;
          ~/.venv-no-setuptools/bin/pip uninstall -y setuptools;
          ~/.venv-no-setuptools/bin/python -We:invalid setup.py -q install;
        fi
        python -We:invalid -We::SyntaxWarning -m compileall -f -q sympy/;
        python -We:invalid setup.py -q install;
        pip list --format=columns;
    fi
script:
  # Don't run doctr if the build fails
  - set -e
  - bin/test_travis.sh
  - if [[ "${TEST_SPHINX}" == "true" ]]; then
    doctr deploy dev --deploy-repo sympy/sympy_doc;
    fi
  - if [[ "${TEST_COVERAGE}" == "true" ]]; then
    bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";
    fi
  - if [[ "${BENCHMARK}" == "true" ]]; then
    asv machine --yes --config asv.conf.travis.json;
    asv run --config asv.conf.travis.json;
    asv compare master HEAD --config asv.conf.travis.json --factor 1.5;
    fi
notifications:
  email: false
